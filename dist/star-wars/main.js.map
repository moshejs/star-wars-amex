{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/character/character.component.html","webpack:///./src/app/character/character.component.scss","webpack:///./src/app/character/character.component.ts","webpack:///./src/app/characters/characters.component.html","webpack:///./src/app/characters/characters.component.scss","webpack:///./src/app/characters/characters.component.ts","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.scss","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/services/character.resolver.ts","webpack:///./src/app/services/character.service.ts","webpack:///./src/app/services/film.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {CharacterComponent} from './character/character.component';\nimport {CharacterResolver} from './services/character.resolver';\nimport {ErrorComponent} from './error/error.component';\nimport {CharactersComponent} from './characters/characters.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/characters',\n    pathMatch: 'full'\n  },\n  {\n    path: 'characters',\n    component: CharactersComponent\n  },\n  {\n    path: 'characters/:name',\n    component: CharacterComponent,\n    resolve: {\n      character: CharacterResolver\n    }\n  },\n  {\n    path: 'error',\n    component: ErrorComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\"\\n               [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n               [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n               [opened]=\\\"!(isHandset$ | async)\\\">\\n    <img src=\\\"assets/logo.png\\\" routerLink=\\\"/characters/\\\" (click)=\\\"selectCharacter('')\\\"/>\\n    <mat-nav-list>\\n      <a mat-list-item *ngFor=\\\"let character of characters\\\"\\n         [routerLink]=\\\"'/characters/' + character.name\\\"\\n          (click)=\\\"selectCharacter(character.name)\\\">\\n        <img matListAvatar [src]=\\\"'assets/characters/' + character.name + '.jpg'\\\" [alt]=\\\"character.name\\\">\\n        <h3 matLine>{{ character.name }}</h3>\\n      </a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>Characters {{ selectedCharacter.length ? '> ' + selectedCharacter : ''}}</span>\\n    </mat-toolbar>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","module.exports = \".sidenav-container {\\n  height: 100%; }\\n\\n.sidenav {\\n  width: 200px; }\\n\\n.sidenav .mat-nav-list {\\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000; }\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n  color: black;\\n  background-color: black;\\n  text-shadow: -1px -1px 0 yellow, 1px -1px 0 yellow, -1px 1px 0 yellow, 1px 1px 0 yellow; }\\n\\n.mat-icon-button {\\n  color: yellow; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb3NoZW1hbGthL0Rlc2t0b3Avc3Rhci13YXJzL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWSxFQUFBOztBQUdkO0VBQ0UsWUFBWSxFQUFBOztBQUdkO0VBQ0UsK0VBSWdCLEVBQUE7O0FBR2xCO0VBQ0Usd0JBQWdCO0VBQWhCLGdCQUFnQjtFQUNoQixNQUFNO0VBQ04sVUFBVTtFQUNWLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsdUZBSWtCLEVBQUE7O0FBR3BCO0VBQ0UsYUFBYSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVuYXYtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc2lkZW5hdiB7XG4gIHdpZHRoOiAyMDBweDtcbn1cblxuLnNpZGVuYXYgLm1hdC1uYXYtbGlzdCB7XG4gIHRleHQtc2hhZG93OlxuICAgIC0xcHggLTFweCAwICMwMDAsXG4gICAgMXB4IC0xcHggMCAjMDAwLFxuICAgIC0xcHggMXB4IDAgIzAwMCxcbiAgICAxcHggMXB4IDAgIzAwMDtcbn1cblxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxO1xuICBjb2xvcjogYmxhY2s7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICB0ZXh0LXNoYWRvdzpcbiAgICAtMXB4IC0xcHggMCB5ZWxsb3csXG4gICAgMXB4IC0xcHggMCB5ZWxsb3csXG4gICAgLTFweCAxcHggMCB5ZWxsb3csXG4gICAgMXB4IDFweCAwIHllbGxvdztcbn1cblxuLm1hdC1pY29uLWJ1dHRvbiB7XG4gIGNvbG9yOiB5ZWxsb3c7XG59XG4iXX0= */\"","import { Component } from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport {environment} from '../environments/environment';\nimport {Character} from './models/character.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  characters: Character[] = environment.characters;\n  selectedCharacter = '';\n\n\nisHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n  selectCharacter(name) {\n    this.selectedCharacter = name;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CharacterComponent } from './character/character.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport {\n  MatToolbarModule,\n  MatButtonModule,\n  MatSidenavModule,\n  MatIconModule,\n  MatListModule,\n  MatGridListModule,\n  MatCardModule\n} from '@angular/material';\nimport {CharacterResolver} from './services/character.resolver';\nimport {RouterModule} from '@angular/router';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ErrorComponent } from './error/error.component';\nimport {CharactersComponent} from './characters/characters.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CharacterComponent,\n    CharactersComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    RouterModule,\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatGridListModule,\n    MatListModule,\n    MatCardModule\n  ],\n  providers: [CharacterResolver],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div *ngIf=\\\"!loading; else loadingScreen\\\">\\n<div style=\\\"display: flex\\\">\\n<div>\\n  <mat-card class=\\\"example-card\\\" *ngIf=\\\"character\\\">\\n     <mat-card-header>\\n       <mat-card-title>{{character.name }}</mat-card-title>\\n       <mat-card-subtitle> Appears in {{character.films.length}} Films</mat-card-subtitle>\\n     </mat-card-header>\\n    <img mat-card-image [src]=\\\"'assets/characters/' + character.name + '.jpg'\\\" [alt]=\\\"character.name\\\">\\n    <mat-card-content>\\n</mat-card-content>\\n</mat-card>\\n</div>\\n<div>\\n  <mat-list>\\n    <mat-list-item>Birth Year: {{ character.birth_year}}</mat-list-item>\\n    <mat-list-item>Gender: {{ character.gender }}</mat-list-item>\\n    <mat-list-item>Eye Color: {{character.eye_color }}</mat-list-item>\\n    <mat-list-item>Height: {{ character.height }}</mat-list-item>\\n    <mat-list-item>Mass: {{ character.mass }}</mat-list-item>\\n    <mat-list-item>Hair Color: {{ character.hair_color }}</mat-list-item>\\n    <mat-list-item>Skin Color: {{ character.skin_color }}</mat-list-item>\\n  </mat-list>\\n</div>\\n</div>\\n<div style=\\\"padding-top: 10em;\\\">\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"1:2\\\">\\n    <mat-grid-tile *ngFor=\\\"let film of films\\\">\\n      <mat-grid-tile-header>{{ film.title }}</mat-grid-tile-header>\\n      <img [src]=\\\"'/assets/films/' + film.episode_id + '.jpg'\\\" />\\n      <mat-grid-tile-footer>{{ film.release_date | date:'EEEE, LLLL dd yyyy'}}</mat-grid-tile-footer>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\\n</div>\\n<ng-template #loadingScreen>\\n<h1 style=\\\"color: yellow\\\">LOADING IS THE FORCE........</h1>\\n</ng-template>\\n\\n\"","module.exports = \".example-card {\\n  max-width: 200px;\\n  max-height: 300px; }\\n\\n.example-header-image {\\n  background-size: cover; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb3NoZW1hbGthL0Rlc2t0b3Avc3Rhci13YXJzL3NyYy9hcHAvY2hhcmFjdGVyL2NoYXJhY3Rlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixpQkFBaUIsRUFBQTs7QUFHbkI7RUFDRSxzQkFBc0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NoYXJhY3Rlci9jaGFyYWN0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jYXJkIHtcbiAgbWF4LXdpZHRoOiAyMDBweDtcbiAgbWF4LWhlaWdodDogMzAwcHg7XG59XG5cbi5leGFtcGxlLWhlYWRlci1pbWFnZSB7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Character} from '../models/character.model';\nimport {Film} from '../models/film.model';\n\nimport {FilmService} from '../services/film.service';\n\n@Component({\n  selector: 'app-character',\n  templateUrl: './character.component.html',\n  styleUrls: ['./character.component.scss']\n})\nexport class CharacterComponent implements OnInit {\n  character: Character;\n  films: Film[] = [];\n  loading = true;\n\n  constructor(private activatedRoute: ActivatedRoute, private filmService: FilmService) { }\n\n  ngOnInit() {\n    this.activatedRoute.data\n      .subscribe((data: any) => {\n        this.character = <Character>data.character;\n        this.films = []; // Resets films when a new character is chosen\n        this.character.films.forEach((film: string) =>\n          this.filmService.getFilmByUrl(film)\n            .subscribe(( resolvedFilm: Film) => {\n              this.films.push(resolvedFilm);\n              this.loading = (this.films.length !== this.character.films.length);\n            }));\n      });\n  }\n\n}\n","module.exports = \"<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"1:1\\\">\\n  <mat-grid-tile *ngFor=\\\"let character of characters\\\"\\n                 [routerLink]=\\\"'/characters/' + character.name\\\">\\n    <mat-grid-tile-header>{{ character.name }}</mat-grid-tile-header>\\n    <img [src]=\\\"'/assets/characters/' + character.name  + '.jpg'\\\" />\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJhY3RlcnMvY2hhcmFjdGVycy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {Character} from '../models/character.model';\n\n@Component({\n  selector: 'app-characters',\n  templateUrl: './characters.component.html',\n  styleUrls: ['./characters.component.scss']\n})\nexport class CharactersComponent implements OnInit {\n  characters: Character[] = environment.characters;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"error\\\">\\n  <h1> Not Found 404</h1>\\n  <div>\\n    <img src=\\\"assets/characters/Yoda.png\\\" />\\n  </div>\\n  <div>\\n    <p>\\n      Found the character you are looking for is not.\\n    </p>\\n  </div>\\n\\n</div>\\n\"","module.exports = \".error {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 100px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb3NoZW1hbGthL0Rlc2t0b3Avc3Rhci13YXJzL3NyYy9hcHAvZXJyb3IvZXJyb3IuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZXJyb3IvZXJyb3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3Ige1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcGFkZGluZzogMTAwcHg7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, Router} from '@angular/router';\nimport {CharacterService} from './character.service';\nimport {environment} from '../../environments/environment';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\nexport class CharacterResolver implements Resolve<any> {\n\n  constructor(private router: Router,\n              private characterService: CharacterService) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const name  = route.paramMap.get('name');\n    const url = environment.characters\n      .filter(character => character.name === name)[0].url;\n\n    return this.characterService.getCharacterByUrl(url)\n      .pipe(catchError(e => this.router.navigateByUrl('error')));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterService {\n\n  constructor(private http: HttpClient) { }\n\n  public getCharacterByUrl(url: string): Observable<any> {\n    return this.http.get<any>(url).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilmService {\n\n  constructor(private http: HttpClient) { }\n\n  public getFilmByUrl(url: string): Observable<any> {\n    return this.http.get<any>(url);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  characters: [\n    {\n      'name': 'Luke Skywalker',\n      'url': 'https://swapi.co/api/people/1/'\n    },\n    {\n      'name': 'Darth Vader',\n      'url': 'https://swapi.co/api/people/4/'\n    },\n    {\n      'name': 'Obi-wan Kenobi',\n      'url': 'https://swapi.co/api/people/unknown/'\n    },\n    {\n      'name': 'R2-D2',\n      'url': 'https://swapi.co/api/people/3/'\n    }\n  ]\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}